unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls;

type
  TForm1 = class(TForm)
    Memo1: TMemo;
    Memo2: TMemo;
    Label1: TLabel;
    Label2: TLabel;
    Edit1: TEdit;
    Label3: TLabel;
    Button1: TButton;
    Button2: TButton;
    Memo3: TMemo;
    Memo4: TMemo;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var N, i : integer;
var mas : array of integer;
begin
N := StrToInt(Edit1.Text);
if (N > 0) then
begin
  SetLength(mas, N);
  Randomize;
  Memo1.Clear;
  Memo2.Clear;
  for i := 0 to N - 1  do
  begin
    mas[i] := Random(N * N * N);
    Memo1.Lines.Add(IntToStr(mas[i]));
    Memo2.Lines.Add(IntToStr(Trunc(Sqrt(mas[i]) + Ln(mas[i] + 1))));
  end;
end;


end;

procedure TForm1.Button2Click(Sender: TObject);
var i, j, N, num : integer;
var X, Y, tmp : array of integer;
begin
  N := StrToInt(Edit1.Text);
  if (N > 0) then
  begin

      SetLength(X, N);
      SetLength(Y, N);
      SetLength(tmp, N);
      for i := 0 to Memo1.Lines.Count - 1 do
      begin
      X[i] := StrtoInt(Memo1.Lines[i]);
      tmp[i] := X[i];
      Y[i] := StrtoInt(Memo2.Lines[i]);
      end;

      for i := 0 to N - 1 do
      begin
          for j := 0 to N - 2 do
          begin
            if (tmp[j] < tmp[j + 1]) then
                begin
                   num := tmp[j];
                   tmp[j] := tmp[j + 1];
                   tmp[j + 1] := num;
                end;
          end;
      end;

      for i := 0 to N - 1 do
      begin
         Memo3.Lines.Add(IntToStr(tmp[i]));
         j := 0;
         while (X[j] <> tmp[i]) do
           j := j + 1;
         Memo4.Lines.Add(IntToStr(Y[j]));
      end;

  end;
end;
end.
